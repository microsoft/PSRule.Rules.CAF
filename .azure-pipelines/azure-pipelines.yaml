# Azure DevOps
# CI pipeline for PSRule.Rules.CAF

variables:
  version: '0.1.0'
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'

 # Use build number format, i.e. 0.1.0-B2001001
name: $(version)-B$(date:yyMM)$(rev:rrr)

trigger:
  branches:
    include:
    - 'master'
  tags:
    include:
    - 'v0.*'

pr:
  branches:
    include:
    - 'master'

stages:

# Build pipeline
- stage: Build
  displayName: Build
  jobs:
  - job:
    strategy:
      matrix:
        Linux:
          displayName: 'Linux'
          imageName: 'ubuntu-latest'
        MacOS:
          displayName: 'MacOS'
          imageName: 'macOS-latest'
        Windows:
          displayName: 'Windows'
          imageName: 'vs2017-win2016'
          publish: 'true'
          analysis: 'true'
          coverage: 'true'
    pool:
      vmImage: $(imageName)
    displayName: 'PowerShell'
    steps:

    # Install pipeline dependencies
    - powershell: ./.azure-pipelines/pipeline-deps.ps1
      displayName: 'Install dependencies'

    # Build module
    - powershell: Invoke-Build -Configuration $(buildConfiguration) -Build $(Build.BuildNumber)
      displayName: 'Build module'

    # Pester test results
    - task: PublishTestResults@2
      displayName: 'Publish Pester results'
      inputs:
        testRunTitle: 'Pester on $(imageName)'
        testRunner: NUnit
        testResultsFiles: 'reports/pester-unit.xml'
        mergeTestResults: true
        platform: $(imageName)
        configuration: $(buildConfiguration)
        publishRunAttachments: true
      condition: succeededOrFailed()

    # PSRule results
    - task: PublishTestResults@2
      displayName: 'Publish PSRule results'
      inputs:
        testRunTitle: 'PSRule on $(imageName)'
        testRunner: NUnit
        testResultsFiles: 'reports/ps-rule*.xml'
        mergeTestResults: true
        platform: $(imageName)
        configuration: $(buildConfiguration)
        publishRunAttachments: true
      condition: succeededOrFailed()

    # Generate Code Coverage report
    - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
      displayName: 'Code coverage report generator'
      inputs:
        reports: 'reports\pester-coverage.xml'
        targetdir: 'reports\coverage'
        sourcedirs: 'src\PSRule.Rules.CAF'
        reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'
        tag: $(Build.BuildNumber)
      condition: eq(variables['coverage'], 'true')

    # Publish Code Coverage report
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish Pester code coverage'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: 'reports/coverage/Cobertura.xml'
        reportDirectory: 'reports/coverage'
      condition: eq(variables['coverage'], 'true')

    # Generate artifacts
    - publish: out/modules/PSRule.Rules.CAF
      displayName: 'Publish module'
      artifact: PSRule.Rules.CAF
      condition: and(succeeded(), eq(variables['publish'], 'true'))

# Release pipeline
- stage: Release
  displayName: Release
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v0.'))
  jobs:
  - job:
    displayName: Live
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      isPreRelease: $[contains(variables['Build.SourceBranchName'], '-B')]
    steps:

    # Download module from build
    - task: DownloadPipelineArtifact@2
      displayName: 'Download module'
      inputs:
        artifact: PSRule.Rules.CAF
        path: $(Build.SourcesDirectory)/out/modules/PSRule.Rules.CAF

    # Install pipeline dependencies
    - powershell: ./.azure-pipelines/pipeline-deps.ps1
      displayName: 'Install dependencies'

    # Install pipeline dependencies and build module
    - powershell: Invoke-Build Release -ApiKey $(apiKey)
      displayName: 'Publish module'

    # Update GitHub release
    - task: GitHubRelease@1
      displayName: 'GitHub release'
      inputs:
        gitHubConnection: 'AzureDevOps-PSRule.Rules.CAF'
        repositoryName: '$(Build.Repository.Name)'
        action: edit
        tag: '$(Build.SourceBranchName)'
        releaseNotesSource: inline
        releaseNotesInline: 'See [change log](https://github.com/Microsoft/PSRule.Rules.CAF/blob/master/CHANGELOG.md)'
        assetUploadMode: replace
        addChangeLog: false
        isPreRelease: $(isPreRelease)
